// <auto-generated />
using System;
using FiberEvolutionScraper.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FiberEvolutionScraper.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FiberEvolutionScraper.Api.Models.EligibiliteFtthDTO", b =>
                {
                    b.Property<string>("CodeImb")
                        .HasColumnType("text");

                    b.Property<int>("EtapeFtth")
                        .HasColumnType("integer");

                    b.Property<string>("FiberPointDTOSignature")
                        .HasColumnType("text");

                    b.Property<string>("Batiment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateDebutEligibilite")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CodeImb", "EtapeFtth", "FiberPointDTOSignature");

                    b.HasIndex("FiberPointDTOSignature");

                    b.ToTable("EligibiliteFtth");
                });

            modelBuilder.Entity("FiberEvolutionScraper.Api.Models.FiberPointDTO", b =>
                {
                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LibAdresse")
                        .HasColumnType("text");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Signature");

                    b.HasIndex("Signature")
                        .IsUnique();

                    b.ToTable("FiberPoint");
                });

            modelBuilder.Entity("FiberEvolutionScraper.Api.Models.EligibiliteFtthDTO", b =>
                {
                    b.HasOne("FiberEvolutionScraper.Api.Models.FiberPointDTO", "FiberPoint")
                        .WithMany("EligibilitesFtth")
                        .HasForeignKey("FiberPointDTOSignature")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("FiberPoint");
                });

            modelBuilder.Entity("FiberEvolutionScraper.Api.Models.FiberPointDTO", b =>
                {
                    b.Navigation("EligibilitesFtth");
                });
#pragma warning restore 612, 618
        }
    }
}
